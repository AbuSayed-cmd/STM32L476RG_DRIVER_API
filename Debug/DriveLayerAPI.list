
DriveLayerAPI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004b8  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000640  08000648  00010648  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000640  08000640  00010648  2**0
                  CONTENTS
  4 .ARM          00000000  08000640  08000640  00010648  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000640  08000648  00010648  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000640  08000640  00010640  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000644  08000644  00010644  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010648  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00010648  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010648  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000871  00000000  00000000  00010678  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000021d  00000000  00000000  00010ee9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  00011108  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000080  00000000  00000000  000111b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000045d  00000000  00000000  00011230  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000be2  00000000  00000000  0001168d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000051a7  00000000  00000000  0001226f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  00017416  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001d4  00000000  00000000  00017468  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000628 	.word	0x08000628

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000628 	.word	0x08000628

080001c8 <GPIO_PeriClockControl>:
 *
 * @Note[in]           - None
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
 80001d0:	460b      	mov	r3, r1
 80001d2:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 80001d4:	78fb      	ldrb	r3, [r7, #3]
 80001d6:	2b01      	cmp	r3, #1
 80001d8:	d157      	bne.n	800028a <GPIO_PeriClockControl+0xc2>
	{
		if(pGPIOx == GPIOA){
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80001e0:	d106      	bne.n	80001f0 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80001e2:	4b58      	ldr	r3, [pc, #352]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 80001e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80001e6:	4a57      	ldr	r2, [pc, #348]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 80001e8:	f043 0301 	orr.w	r3, r3, #1
 80001ec:	64d3      	str	r3, [r2, #76]	; 0x4c
			GPIOG_PCLK_DA();
		}else if (pGPIOx == GPIOH){
			GPIOH_PCLK_DA();
		}
	}
}
 80001ee:	e0a3      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOB){
 80001f0:	687b      	ldr	r3, [r7, #4]
 80001f2:	4a55      	ldr	r2, [pc, #340]	; (8000348 <GPIO_PeriClockControl+0x180>)
 80001f4:	4293      	cmp	r3, r2
 80001f6:	d106      	bne.n	8000206 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80001f8:	4b52      	ldr	r3, [pc, #328]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 80001fa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80001fc:	4a51      	ldr	r2, [pc, #324]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 80001fe:	f043 0302 	orr.w	r3, r3, #2
 8000202:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000204:	e098      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOC){
 8000206:	687b      	ldr	r3, [r7, #4]
 8000208:	4a50      	ldr	r2, [pc, #320]	; (800034c <GPIO_PeriClockControl+0x184>)
 800020a:	4293      	cmp	r3, r2
 800020c:	d106      	bne.n	800021c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800020e:	4b4d      	ldr	r3, [pc, #308]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000210:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000212:	4a4c      	ldr	r2, [pc, #304]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000214:	f043 0304 	orr.w	r3, r3, #4
 8000218:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 800021a:	e08d      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOD){
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	4a4c      	ldr	r2, [pc, #304]	; (8000350 <GPIO_PeriClockControl+0x188>)
 8000220:	4293      	cmp	r3, r2
 8000222:	d106      	bne.n	8000232 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000224:	4b47      	ldr	r3, [pc, #284]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000226:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000228:	4a46      	ldr	r2, [pc, #280]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 800022a:	f043 0308 	orr.w	r3, r3, #8
 800022e:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000230:	e082      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOE){
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	4a47      	ldr	r2, [pc, #284]	; (8000354 <GPIO_PeriClockControl+0x18c>)
 8000236:	4293      	cmp	r3, r2
 8000238:	d106      	bne.n	8000248 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800023a:	4b42      	ldr	r3, [pc, #264]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 800023c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800023e:	4a41      	ldr	r2, [pc, #260]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000240:	f043 0310 	orr.w	r3, r3, #16
 8000244:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000246:	e077      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOF){
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	4a43      	ldr	r2, [pc, #268]	; (8000358 <GPIO_PeriClockControl+0x190>)
 800024c:	4293      	cmp	r3, r2
 800024e:	d106      	bne.n	800025e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000250:	4b3c      	ldr	r3, [pc, #240]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000252:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000254:	4a3b      	ldr	r2, [pc, #236]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000256:	f043 0320 	orr.w	r3, r3, #32
 800025a:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 800025c:	e06c      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOG){
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	4a3e      	ldr	r2, [pc, #248]	; (800035c <GPIO_PeriClockControl+0x194>)
 8000262:	4293      	cmp	r3, r2
 8000264:	d106      	bne.n	8000274 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000266:	4b37      	ldr	r3, [pc, #220]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000268:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800026a:	4a36      	ldr	r2, [pc, #216]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 800026c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000270:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000272:	e061      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOH){
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	4a3a      	ldr	r2, [pc, #232]	; (8000360 <GPIO_PeriClockControl+0x198>)
 8000278:	4293      	cmp	r3, r2
 800027a:	d15d      	bne.n	8000338 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 800027c:	4b31      	ldr	r3, [pc, #196]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 800027e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000280:	4a30      	ldr	r2, [pc, #192]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000282:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000286:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000288:	e056      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA){
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8000290:	d106      	bne.n	80002a0 <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DA();
 8000292:	4b2c      	ldr	r3, [pc, #176]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000294:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000296:	4a2b      	ldr	r2, [pc, #172]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000298:	f023 0301 	bic.w	r3, r3, #1
 800029c:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 800029e:	e04b      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOB){
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	4a29      	ldr	r2, [pc, #164]	; (8000348 <GPIO_PeriClockControl+0x180>)
 80002a4:	4293      	cmp	r3, r2
 80002a6:	d106      	bne.n	80002b6 <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DA();
 80002a8:	4b26      	ldr	r3, [pc, #152]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 80002aa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80002ac:	4a25      	ldr	r2, [pc, #148]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 80002ae:	f023 0302 	bic.w	r3, r3, #2
 80002b2:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 80002b4:	e040      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOC){
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	4a24      	ldr	r2, [pc, #144]	; (800034c <GPIO_PeriClockControl+0x184>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	d106      	bne.n	80002cc <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DA();
 80002be:	4b21      	ldr	r3, [pc, #132]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 80002c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80002c2:	4a20      	ldr	r2, [pc, #128]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 80002c4:	f023 0304 	bic.w	r3, r3, #4
 80002c8:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 80002ca:	e035      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOD){
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	4a20      	ldr	r2, [pc, #128]	; (8000350 <GPIO_PeriClockControl+0x188>)
 80002d0:	4293      	cmp	r3, r2
 80002d2:	d106      	bne.n	80002e2 <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DA();
 80002d4:	4b1b      	ldr	r3, [pc, #108]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 80002d6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80002d8:	4a1a      	ldr	r2, [pc, #104]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 80002da:	f023 0308 	bic.w	r3, r3, #8
 80002de:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 80002e0:	e02a      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOE){
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4a1b      	ldr	r2, [pc, #108]	; (8000354 <GPIO_PeriClockControl+0x18c>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	d106      	bne.n	80002f8 <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DA();
 80002ea:	4b16      	ldr	r3, [pc, #88]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 80002ec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80002ee:	4a15      	ldr	r2, [pc, #84]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 80002f0:	f023 0310 	bic.w	r3, r3, #16
 80002f4:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 80002f6:	e01f      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOF){
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4a17      	ldr	r2, [pc, #92]	; (8000358 <GPIO_PeriClockControl+0x190>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d106      	bne.n	800030e <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DA();
 8000300:	4b10      	ldr	r3, [pc, #64]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000302:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000304:	4a0f      	ldr	r2, [pc, #60]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000306:	f023 0320 	bic.w	r3, r3, #32
 800030a:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 800030c:	e014      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOG){
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a12      	ldr	r2, [pc, #72]	; (800035c <GPIO_PeriClockControl+0x194>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DA();
 8000316:	4b0b      	ldr	r3, [pc, #44]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000318:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800031a:	4a0a      	ldr	r2, [pc, #40]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 800031c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000320:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000322:	e009      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOH){
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a0e      	ldr	r2, [pc, #56]	; (8000360 <GPIO_PeriClockControl+0x198>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d105      	bne.n	8000338 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DA();
 800032c:	4b05      	ldr	r3, [pc, #20]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 800032e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000330:	4a04      	ldr	r2, [pc, #16]	; (8000344 <GPIO_PeriClockControl+0x17c>)
 8000332:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000336:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000338:	bf00      	nop
 800033a:	370c      	adds	r7, #12
 800033c:	46bd      	mov	sp, r7
 800033e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000342:	4770      	bx	lr
 8000344:	40021000 	.word	0x40021000
 8000348:	48000400 	.word	0x48000400
 800034c:	48000800 	.word	0x48000800
 8000350:	48000c00 	.word	0x48000c00
 8000354:	48001000 	.word	0x48001000
 8000358:	48001400 	.word	0x48001400
 800035c:	48001800 	.word	0x48001800
 8000360:	48001c00 	.word	0x48001c00

08000364 <GPIO_Init>:
 *
 * @Note[in]           - None
 *
 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000364:	b480      	push	{r7}
 8000366:	b087      	sub	sp, #28
 8000368:	af00      	add	r7, sp, #0
 800036a:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0;
 800036c:	2300      	movs	r3, #0
 800036e:	617b      	str	r3, [r7, #20]

	//configure the mode of GPIO pin
	if(pGPIOHandle ->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	795b      	ldrb	r3, [r3, #5]
 8000374:	2b03      	cmp	r3, #3
 8000376:	d81f      	bhi.n	80003b8 <GPIO_Init+0x54>
		temp = (pGPIOHandle ->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	795b      	ldrb	r3, [r3, #5]
 800037c:	461a      	mov	r2, r3
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	791b      	ldrb	r3, [r3, #4]
 8000382:	005b      	lsls	r3, r3, #1
 8000384:	fa02 f303 	lsl.w	r3, r2, r3
 8000388:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	681a      	ldr	r2, [r3, #0]
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	791b      	ldrb	r3, [r3, #4]
 8000394:	005b      	lsls	r3, r3, #1
 8000396:	2103      	movs	r1, #3
 8000398:	fa01 f303 	lsl.w	r3, r1, r3
 800039c:	43db      	mvns	r3, r3
 800039e:	4619      	mov	r1, r3
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	400a      	ands	r2, r1
 80003a6:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	6819      	ldr	r1, [r3, #0]
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	697a      	ldr	r2, [r7, #20]
 80003b4:	430a      	orrs	r2, r1
 80003b6:	601a      	str	r2, [r3, #0]
	}else{
		//Code for Interrupt Mode
	}

	temp = 0;
 80003b8:	2300      	movs	r3, #0
 80003ba:	617b      	str	r3, [r7, #20]
	// Configure the Speed
	temp =( pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	799b      	ldrb	r3, [r3, #6]
 80003c0:	461a      	mov	r2, r3
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	791b      	ldrb	r3, [r3, #4]
 80003c6:	005b      	lsls	r3, r3, #1
 80003c8:	fa02 f303 	lsl.w	r3, r2, r3
 80003cc:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	689a      	ldr	r2, [r3, #8]
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	791b      	ldrb	r3, [r3, #4]
 80003d8:	005b      	lsls	r3, r3, #1
 80003da:	2103      	movs	r1, #3
 80003dc:	fa01 f303 	lsl.w	r3, r1, r3
 80003e0:	43db      	mvns	r3, r3
 80003e2:	4619      	mov	r1, r3
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	400a      	ands	r2, r1
 80003ea:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	6899      	ldr	r1, [r3, #8]
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	697a      	ldr	r2, [r7, #20]
 80003f8:	430a      	orrs	r2, r1
 80003fa:	609a      	str	r2, [r3, #8]

	temp = 0;
 80003fc:	2300      	movs	r3, #0
 80003fe:	617b      	str	r3, [r7, #20]
	//Configure PUPD Settings
	temp =( pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	79db      	ldrb	r3, [r3, #7]
 8000404:	461a      	mov	r2, r3
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	791b      	ldrb	r3, [r3, #4]
 800040a:	005b      	lsls	r3, r3, #1
 800040c:	fa02 f303 	lsl.w	r3, r2, r3
 8000410:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	68da      	ldr	r2, [r3, #12]
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	791b      	ldrb	r3, [r3, #4]
 800041c:	005b      	lsls	r3, r3, #1
 800041e:	2103      	movs	r1, #3
 8000420:	fa01 f303 	lsl.w	r3, r1, r3
 8000424:	43db      	mvns	r3, r3
 8000426:	4619      	mov	r1, r3
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	400a      	ands	r2, r1
 800042e:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	68d9      	ldr	r1, [r3, #12]
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	697a      	ldr	r2, [r7, #20]
 800043c:	430a      	orrs	r2, r1
 800043e:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000440:	2300      	movs	r3, #0
 8000442:	617b      	str	r3, [r7, #20]
	//Configure the Output Type
	temp =( pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	7a1b      	ldrb	r3, [r3, #8]
 8000448:	461a      	mov	r2, r3
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	791b      	ldrb	r3, [r3, #4]
 800044e:	fa02 f303 	lsl.w	r3, r2, r3
 8000452:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	685a      	ldr	r2, [r3, #4]
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	791b      	ldrb	r3, [r3, #4]
 800045e:	4619      	mov	r1, r3
 8000460:	2301      	movs	r3, #1
 8000462:	408b      	lsls	r3, r1
 8000464:	43db      	mvns	r3, r3
 8000466:	4619      	mov	r1, r3
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	400a      	ands	r2, r1
 800046e:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	6859      	ldr	r1, [r3, #4]
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	697a      	ldr	r2, [r7, #20]
 800047c:	430a      	orrs	r2, r1
 800047e:	605a      	str	r2, [r3, #4]

	temp = 0;
 8000480:	2300      	movs	r3, #0
 8000482:	617b      	str	r3, [r7, #20]
	//Configure The Alternate Functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode == GPIO_MODE_ALTFN){
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	7a5b      	ldrb	r3, [r3, #9]
 8000488:	2b02      	cmp	r3, #2
 800048a:	d132      	bne.n	80004f2 <GPIO_Init+0x18e>
		// Configure the Alternate Function Register
		uint32_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	791b      	ldrb	r3, [r3, #4]
 8000490:	08db      	lsrs	r3, r3, #3
 8000492:	b2db      	uxtb	r3, r3
 8000494:	613b      	str	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	791b      	ldrb	r3, [r3, #4]
 800049a:	f003 0307 	and.w	r3, r3, #7
 800049e:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~ (0xF << (4 * temp2));
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	693a      	ldr	r2, [r7, #16]
 80004a6:	3208      	adds	r2, #8
 80004a8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80004ac:	68fb      	ldr	r3, [r7, #12]
 80004ae:	009b      	lsls	r3, r3, #2
 80004b0:	210f      	movs	r1, #15
 80004b2:	fa01 f303 	lsl.w	r3, r1, r3
 80004b6:	43db      	mvns	r3, r3
 80004b8:	4619      	mov	r1, r3
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	4011      	ands	r1, r2
 80004c0:	693a      	ldr	r2, [r7, #16]
 80004c2:	3208      	adds	r2, #8
 80004c4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<(4 * temp2));
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	693a      	ldr	r2, [r7, #16]
 80004ce:	3208      	adds	r2, #8
 80004d0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	7a5b      	ldrb	r3, [r3, #9]
 80004d8:	4619      	mov	r1, r3
 80004da:	68fb      	ldr	r3, [r7, #12]
 80004dc:	009b      	lsls	r3, r3, #2
 80004de:	fa01 f303 	lsl.w	r3, r1, r3
 80004e2:	4619      	mov	r1, r3
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	4311      	orrs	r1, r2
 80004ea:	693a      	ldr	r2, [r7, #16]
 80004ec:	3208      	adds	r2, #8
 80004ee:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80004f2:	bf00      	nop
 80004f4:	371c      	adds	r7, #28
 80004f6:	46bd      	mov	sp, r7
 80004f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004fc:	4770      	bx	lr

080004fe <GPIO_ToggleOutputPin>:
	}
}
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value){
	pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80004fe:	b480      	push	{r7}
 8000500:	b083      	sub	sp, #12
 8000502:	af00      	add	r7, sp, #0
 8000504:	6078      	str	r0, [r7, #4]
 8000506:	460b      	mov	r3, r1
 8000508:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	695b      	ldr	r3, [r3, #20]
 800050e:	78fa      	ldrb	r2, [r7, #3]
 8000510:	2101      	movs	r1, #1
 8000512:	fa01 f202 	lsl.w	r2, r1, r2
 8000516:	405a      	eors	r2, r3
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	615a      	str	r2, [r3, #20]
}
 800051c:	bf00      	nop
 800051e:	370c      	adds	r7, #12
 8000520:	46bd      	mov	sp, r7
 8000522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000526:	4770      	bx	lr

08000528 <delay>:

#include <stdint.h>
#include "STM32L476xx.h"
#include "STM32L476xx_GPIO_DRIVER.h"

void delay(void){
 8000528:	b480      	push	{r7}
 800052a:	b083      	sub	sp, #12
 800052c:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i <100000; i++);
 800052e:	2300      	movs	r3, #0
 8000530:	607b      	str	r3, [r7, #4]
 8000532:	e002      	b.n	800053a <delay+0x12>
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	3301      	adds	r3, #1
 8000538:	607b      	str	r3, [r7, #4]
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	4a04      	ldr	r2, [pc, #16]	; (8000550 <delay+0x28>)
 800053e:	4293      	cmp	r3, r2
 8000540:	d9f8      	bls.n	8000534 <delay+0xc>
}
 8000542:	bf00      	nop
 8000544:	bf00      	nop
 8000546:	370c      	adds	r7, #12
 8000548:	46bd      	mov	sp, r7
 800054a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800054e:	4770      	bx	lr
 8000550:	0001869f 	.word	0x0001869f

08000554 <main>:

int main(void){
 8000554:	b580      	push	{r7, lr}
 8000556:	b084      	sub	sp, #16
 8000558:	af00      	add	r7, sp, #0
	GPIO_Handle_t Led;

	Led.pGPIOx = GPIOA;
 800055a:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800055e:	607b      	str	r3, [r7, #4]
	Led.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000560:	2305      	movs	r3, #5
 8000562:	723b      	strb	r3, [r7, #8]
	Led.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000564:	2301      	movs	r3, #1
 8000566:	727b      	strb	r3, [r7, #9]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000568:	2101      	movs	r1, #1
 800056a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800056e:	f7ff fe2b 	bl	80001c8 <GPIO_PeriClockControl>
	GPIO_Init(&Led);
 8000572:	1d3b      	adds	r3, r7, #4
 8000574:	4618      	mov	r0, r3
 8000576:	f7ff fef5 	bl	8000364 <GPIO_Init>

	while(1){
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800057a:	2105      	movs	r1, #5
 800057c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000580:	f7ff ffbd 	bl	80004fe <GPIO_ToggleOutputPin>
		delay();
 8000584:	f7ff ffd0 	bl	8000528 <delay>
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 8000588:	e7f7      	b.n	800057a <main+0x26>
	...

0800058c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800058c:	480d      	ldr	r0, [pc, #52]	; (80005c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800058e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000590:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000594:	480c      	ldr	r0, [pc, #48]	; (80005c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000596:	490d      	ldr	r1, [pc, #52]	; (80005cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000598:	4a0d      	ldr	r2, [pc, #52]	; (80005d0 <LoopForever+0xe>)
  movs r3, #0
 800059a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800059c:	e002      	b.n	80005a4 <LoopCopyDataInit>

0800059e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800059e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005a2:	3304      	adds	r3, #4

080005a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005a8:	d3f9      	bcc.n	800059e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005aa:	4a0a      	ldr	r2, [pc, #40]	; (80005d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005ac:	4c0a      	ldr	r4, [pc, #40]	; (80005d8 <LoopForever+0x16>)
  movs r3, #0
 80005ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005b0:	e001      	b.n	80005b6 <LoopFillZerobss>

080005b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005b4:	3204      	adds	r2, #4

080005b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005b8:	d3fb      	bcc.n	80005b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005ba:	f000 f811 	bl	80005e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005be:	f7ff ffc9 	bl	8000554 <main>

080005c2 <LoopForever>:

LoopForever:
    b LoopForever
 80005c2:	e7fe      	b.n	80005c2 <LoopForever>
  ldr   r0, =_estack
 80005c4:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80005c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005cc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80005d0:	08000648 	.word	0x08000648
  ldr r2, =_sbss
 80005d4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80005d8:	2000001c 	.word	0x2000001c

080005dc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005dc:	e7fe      	b.n	80005dc <ADC1_2_IRQHandler>
	...

080005e0 <__libc_init_array>:
 80005e0:	b570      	push	{r4, r5, r6, lr}
 80005e2:	4d0d      	ldr	r5, [pc, #52]	; (8000618 <__libc_init_array+0x38>)
 80005e4:	4c0d      	ldr	r4, [pc, #52]	; (800061c <__libc_init_array+0x3c>)
 80005e6:	1b64      	subs	r4, r4, r5
 80005e8:	10a4      	asrs	r4, r4, #2
 80005ea:	2600      	movs	r6, #0
 80005ec:	42a6      	cmp	r6, r4
 80005ee:	d109      	bne.n	8000604 <__libc_init_array+0x24>
 80005f0:	4d0b      	ldr	r5, [pc, #44]	; (8000620 <__libc_init_array+0x40>)
 80005f2:	4c0c      	ldr	r4, [pc, #48]	; (8000624 <__libc_init_array+0x44>)
 80005f4:	f000 f818 	bl	8000628 <_init>
 80005f8:	1b64      	subs	r4, r4, r5
 80005fa:	10a4      	asrs	r4, r4, #2
 80005fc:	2600      	movs	r6, #0
 80005fe:	42a6      	cmp	r6, r4
 8000600:	d105      	bne.n	800060e <__libc_init_array+0x2e>
 8000602:	bd70      	pop	{r4, r5, r6, pc}
 8000604:	f855 3b04 	ldr.w	r3, [r5], #4
 8000608:	4798      	blx	r3
 800060a:	3601      	adds	r6, #1
 800060c:	e7ee      	b.n	80005ec <__libc_init_array+0xc>
 800060e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000612:	4798      	blx	r3
 8000614:	3601      	adds	r6, #1
 8000616:	e7f2      	b.n	80005fe <__libc_init_array+0x1e>
 8000618:	08000640 	.word	0x08000640
 800061c:	08000640 	.word	0x08000640
 8000620:	08000640 	.word	0x08000640
 8000624:	08000644 	.word	0x08000644

08000628 <_init>:
 8000628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800062a:	bf00      	nop
 800062c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800062e:	bc08      	pop	{r3}
 8000630:	469e      	mov	lr, r3
 8000632:	4770      	bx	lr

08000634 <_fini>:
 8000634:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000636:	bf00      	nop
 8000638:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800063a:	bc08      	pop	{r3}
 800063c:	469e      	mov	lr, r3
 800063e:	4770      	bx	lr
